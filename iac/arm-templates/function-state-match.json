{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "resourceTags": {
            "type": "object"
        },
        "stateAbbr": {
            "type": "string"
        },
        "location": {
            "type": "string"
        },
        "identityGroup": {
            "type": "string"
        },
        "azAuthConnectionString": {
            "type": "string"
        },
        "dbConnectionString": {
            "type": "string"
        },
        "cloudName": {
            "type": "string"
        },
        "functionAppName": {
            "type": "string"
        },
        "storageAccountName": {
            "type": "string"
        },
        "managedIdentityName": {
            "type": "string"
        },
        "appServicePlanName": {
            "type": "string"
        },
        "coreResourceGroup": {
            "type": "String"
        },
        "eventHubName": {
            "type": "String"
        }
    },
    "variables": {
        "functionAppName": "[parameters('functionAppName')]",
        "storageAccountName": "[parameters('storageAccountName')]",
        "managedIdentityName": "[parameters('managedIdentityName')]",
        "functionWorkerRuntime": "dotnet",
        "storageAccountType": "Standard_LRS",
        "systemTypeTag": {
            "SysType": "PerStateMatchApi"
        },
        "applicationInsightsTag": {
            "[concat('hidden-link:', resourceId('Microsoft.Web/sites', variables('functionAppName')))]": "Resource"
        },
        "identityName": "[variables('managedIdentityName')]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[variables('storageAccountName')]",
            "tags": "[parameters('resourceTags')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[variables('storageAccountType')]"
            },
            "kind": "Storage"
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2020-06-01",
            "name": "[variables('functionAppName')]",
            "tags": "[union(parameters('resourceTags'), variables('systemTypeTag'))]",
            "location": "[parameters('location')]",
            "kind": "functionapp",
            "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                    "[resourceId(parameters('identityGroup'),'Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName'))]": {}
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ],
            "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]",
                "httpsOnly": true,
                "siteConfig": {
                    "ftpsState": "Disabled",
                    "alwaysOn": true,
                    "appSettings": [
                        /*
                            The following settings are required for Function apps per the MS documentation:
                            - AzureWebJobsStorage
                            - FUNCTIONS_WORKER_RUNTIME
                            - FUNCTIONS_EXTENSION_VERSION

                            See: https://docs.microsoft.com/en-us/azure/azure-functions/functions-infrastructure-as-code#function-app)
                        */
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2019-06-01').keys[0].value)]"
                        },
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "[variables('functionWorkerRuntime')]"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~3"
                        },
                        /*
                            The `WEBSITE_CONTENTAZUREFILECONNECTIONSTRING` and `WEBSITE_CONTENTSHARE`
                            settings are required for Windows function apps using a consumption plan,
                            per the MS documentation.

                            See: https://docs.microsoft.com/en-us/azure/azure-functions/functions-infrastructure-as-code#windows)
                        */
                        {
                            "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2019-06-01').keys[0].value)]"
                        },
                        {
                            "name": "WEBSITE_CONTENTSHARE",
                            "value": "[toLower(variables('functionAppName'))]"
                        },
                        // Required when using the zip deployment method (i.e., the method
                        // used by `func azure functionapp publish`)
                        {
                            "name": "WEBSITE_RUN_FROM_PACKAGE",
                            "value": "1"
                        },
                        // Connect app to Application Insights instance
                        {
                            "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                            "value": "[reference(resourceId('microsoft.insights/components', variables('functionAppName')), '2020-02-02-preview').InstrumentationKey]"
                        },
                        // Custom environment variables:
                        {
                            "name": "AzureServicesAuthConnectionString",
                            "value": "[parameters('azAuthConnectionString')]"
                        },
                        {
                            "name": "DatabaseConnectionString",
                            "value": "[parameters('dbConnectionString')]"
                        },
                        {
                            "name": "CloudName",
                            "value": "[parameters('cloudName')]"
                        },
                        {
                            "name": "StateAbbr",
                            "value": "[parameters('stateAbbr')]"
                        }
                    ]
                }
            }
        },
        {
            "type": "microsoft.insights/components",
            "apiVersion": "2020-02-02-preview",
            "name": "[variables('functionAppName')]",
            "location": "[parameters('location')]",
            "tags": "[union(parameters('resourceTags'), variables('applicationInsightsTag'))]",
            "properties": {
                "ApplicationId": "[variables('functionAppName')]",
                "Request_Source": "IbizaWebAppExtensionCreate"
            }
        },
        {
            /* https://docs.microsoft.com/en-us/azure/azure-monitor/essentials/resource-manager-diagnostic-settings */
            "apiVersion": "2017-05-01-preview",
            "type": "Microsoft.Web/sites/providers/diagnosticSettings",
            "name": "[concat(variables('functionAppName'), '/Microsoft.Insights/stream-logs-to-event-hub')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]"
            ],
            "properties": {
                "eventHubAuthorizationRuleId": "[concat(subscription().id, '/resourceGroups/', parameters('coreResourceGroup'), '/providers/Microsoft.EventHub/namespaces/', parameters('eventHubName'), '/authorizationrules/RootManageSharedAccessKey')]",
                "eventHubName": "logs",
                "logs": [
                    /* Category names from `az monitor diagnostic-settings categories list` */
                    {
                        "category": "FunctionAppLogs",
                        "enabled": true
                    }
                ]
            }
        }
    ],
    "outputs": {
        "functionAppName": {
            "type": "string",
            "value": "[variables('functionAppName')]"
        }
    }
}
